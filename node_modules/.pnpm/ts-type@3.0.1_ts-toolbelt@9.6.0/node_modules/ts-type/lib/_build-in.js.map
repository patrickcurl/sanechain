{"version":3,"file":"_build-in.js","sourceRoot":"","sources":["_build-in.ts"],"names":[],"mappings":";AAAA;;;GAGG","sourcesContent":["/**\n * re-export build-in type\n * for some time ide is stupid can't found types\n */\n\nexport type ITSParameters<T extends (...args: any[]) => any> = Parameters<T>\nexport type ITSConstructorParameters<T extends new (...args: any[]) => any> = ConstructorParameters<T>\nexport type ITSPartial<T> = Partial<T>\nexport type ITSPick<T, K extends keyof T = keyof T> = Pick<T, K>\nexport type ITSInstanceType<T extends new (...args: any[]) => any> = InstanceType<T>\n\n\nexport type ITSClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void;\nexport type ITSPropertyDecorator = (target: object, propertyKey: string | symbol) => void;\nexport type ITSMethodDecorator = <T>(target: object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\nexport type ITSParameterDecorator = (target: object, propertyKey: string | symbol, parameterIndex: number) => void;\n\n/**\n * Exclude null and undefined from T\n * @see https://devblogs.microsoft.com/typescript/announcing-typescript-4-8/#improved-intersection-reduction-union-compatibility-and-narrowing\n */\nexport type ITSNonNullable<T> = NonNullable<T>;\n"]}