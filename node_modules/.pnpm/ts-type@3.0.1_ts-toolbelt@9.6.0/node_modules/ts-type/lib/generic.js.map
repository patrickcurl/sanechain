{"version":3,"file":"generic.js","sourceRoot":"","sources":["generic.ts"],"names":[],"mappings":"","sourcesContent":["export type ITSTypeFunction<T> = (...args: any[]) => T;\n\nexport interface ITSMapLike<K, V>\n{\n\tget(key: K): V | undefined;\n\n\thas(key: K): boolean;\n}\n\nexport interface ITSSetLike<V>\n{\n\thas(value: V): boolean;\n}\n\n/**\n * @see bluebird\n */\nexport type ITSResolvable<R> = R | PromiseLike<R>;\n\nexport interface ITSArrayLikeWriteable<T>\n{\n\treadonly length: number;\n\t[n: number]: T;\n}\n"]}