{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"","sourcesContent":["import { ITSUnionToIntersection } from '../../helper/intersection';\nimport { ITSLogicIsNever } from '../never';\n\nexport type ITSLogicIsUnion<T, Y = true, N = false> = [T] extends [ITSUnionToIntersection<T>] ? N : Y\n\n/**\n * @see https://stackoverflow.com/a/49982981/4563339\n * @example\n * let a: ITSLogicIsSingleNonUnion01<'' | '4' | any, string>\n * let b: ITSLogicIsSingleNonUnion01<'' & '4' & any, string>\n * let c: ITSLogicIsSingleNonUnion01<'', string>\n *\n * expectType<false>(a);\n * expectType<false>(b);\n * expectType<true>(c);\n */\nexport type ITSLogicIsSingleNonUnion01<\n\tT,\n\tU extends any,\n\tY = true,\n\tN = false\n> = U extends T ?\n\tN : ITSLogicIsNever<T, N, ITSLogicIsUnion<T, N, Y>>\n\t;\n\n\n"]}