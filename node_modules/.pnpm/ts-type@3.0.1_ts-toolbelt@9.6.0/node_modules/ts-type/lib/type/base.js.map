{"version":3,"file":"base.js","sourceRoot":"","sources":["base.ts"],"names":[],"mappings":";AAAA;;GAEG","sourcesContent":["/**\n * Created by user on 2019/5/17.\n */\n\nimport { ITSTypeFunction } from '../generic';\n\nexport type ITSArrayListMaybeReadonly<T> = T[] | readonly T[];\n\nexport type ITSKeys = symbol | string | number;\n\nexport type ITSConstructorLike<T extends any = any> = new(...args: any) => T;\n\nexport type ITSValueOrArray<T> = T | T[];\n\nexport type ITSValueOrArrayMaybeReadonly<T> = T | ITSArrayListMaybeReadonly<T>;\n\nexport type ITSPropertyKey = string | symbol;\n\nexport type ITSAnyFunction = ITSTypeFunction<any>;\n\nexport type ITSBasicPrimitive = number | string | boolean;\n\nexport type ITSNullPrimitive = null | undefined;\n\n"]}