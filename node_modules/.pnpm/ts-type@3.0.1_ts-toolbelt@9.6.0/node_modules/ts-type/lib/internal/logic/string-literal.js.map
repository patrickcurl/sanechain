{"version":3,"file":"string-literal.js","sourceRoot":"","sources":["string-literal.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * detect if T is a union\n */\nexport type IsAUnion<T, Y = true, N = false, U = T> = U extends any\n\t? ([T] extends [U] ? N : Y)\n\t: never;\n\n/**\n * detect if T is a single string literal\n */\nexport type IsASingleStringLiteral<\n\tT extends string,\n\tY = true,\n\tN = false\n\t> = string extends T ? N : [T] extends [never] ? N : IsAUnion<T, N, Y>;\n"]}