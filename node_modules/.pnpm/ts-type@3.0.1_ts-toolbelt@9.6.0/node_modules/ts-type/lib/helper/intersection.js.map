{"version":3,"file":"intersection.js","sourceRoot":"","sources":["intersection.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * @see https://stackoverflow.com/questions/50374908/transform-union-type-to-intersection-type\n * @example\n * type FunctionUnion = (() => void) | ((p: string) => void);\n * type FunctionIntersection = (() => void) & ((p: string) => void);\n * type SynthesizedFunctionIntersection = ITSUnionToIntersection<FunctionUnion>\n * // type SynthesizedFunctionIntersection = (() => void) & ((p: string) => void)\n */\nexport type ITSUnionToIntersection<U> =\n\t(U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n"]}