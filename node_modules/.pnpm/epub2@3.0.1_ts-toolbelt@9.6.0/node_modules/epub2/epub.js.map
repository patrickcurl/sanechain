{"version":3,"file":"epub.js","sourceRoot":"","sources":["epub.ts"],"names":[],"mappings":";AAAA,qCAAkC;AAIlC,iBAAS,WAAI,CAAC;AAEd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuCE","sourcesContent":["import { EPub } from './lib/epub';\n\n//TODO: Cache parsed data\n\nexport = EPub;\n\n/*\n// @ts-ignore\ndeclare module \"epub\"\n{\n\n\timport { EventEmitter } from \"events\";\n\n\tinterface TocElement\n\t{\n\t\tlevel: number;\n\t\torder: number;\n\t\ttitle: string;\n\t\tid: string;\n\t\thref?: string;\n\t}\n\n\tclass EPub extends EventEmitter\n\t{\n\t\tconstructor(epubfile: string, imagewebroot?: string, chapterwebroot?: string);\n\n\t\tmetadata: Object;\n\t\tmanifest: Object;\n\t\tspine: Object;\n\t\tflow: Array<Object>;\n\t\ttoc: Array<TocElement>;\n\n\t\tparse(): void;\n\n\t\tgetChapter(chapterId: string, callback: (error: Error, text: string) => void): void;\n\n\t\tgetChapterRaw(chapterId: string, callback: (error: Error, text: string) => void): void;\n\n\t\tgetImage(id: string, callback: (error: Error, data: Buffer, mimeType: string) => void): void;\n\n\t\tgetFile(id: string, callback: (error: Error, data: Buffer, mimeType: string) => void): void;\n\t}\n\n\texport = EPub;\n}\n*/\n"]}