export declare class LinkedList<T> {
    private _head;
    private _tail;
    private _length;
    constructor(...values: T[]);
    iterator(): IterableIterator<T>;
    [Symbol.iterator](): IterableIterator<T>;
    readonly head: T;
    readonly tail: T;
    readonly length: number;
    insert(val: T, previousItem: T, checkDuplicates?: boolean): boolean;
    append(val: T, checkDuplicates?: boolean): boolean;
    prepend(val: T, checkDuplicates?: boolean): boolean;
    remove(val: T): T;
    removeHead(): T;
    removeTail(): T;
    first(num: number): T[];
    toArray(): T[];
    private isDuplicate(val);
}
export declare class LinkedListItem<T> {
    value: T;
    next: LinkedListItem<T>;
    prev: LinkedListItem<T>;
    constructor(val: T);
}
